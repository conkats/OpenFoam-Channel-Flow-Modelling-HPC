/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1606+                                |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         Gauss upwind phi;
    div(phi,U)      Gauss upwind phi;
    div(phi,k)      Gauss upwind phi;
    div(phi,epsilon)  Gauss upwind phi;
    div((nuEff*dev2(T(grad(U))))) Gauss upwind phi;
}

laplacianSchemes
{
    default        				 Gauss linear uncorrected;
    laplacian(nuEff,U) 				 Gauss linear limited 0.333; //Gauss linear corrected;
    laplacian(nu,U) 				 Gauss linear limited 0.333; //Gauss linear corrected;
    laplacian((1|A(U)),p)			 Gauss linear limited 0.333; //Gauss upwind corrected;
    laplacian(DkEff,k)				 Gauss linear limited 0.333; //Gauss upwind corrected;
    laplacian(DepsilonEff,epsilon)		 Gauss linear limited 0.333; //Gauss upwind corrected;
    laplacian(((((Cmu|sigmaEps)*T)*R)+(nu*(1))),epsilon) Gauss linear corrected;
    laplacian(((((Cmu|sigmaK)*T)*R)+(nu*(1))),k) Gauss linear corrected;
    laplacian((((Cmu*T)*R)+(nu*(1))),epsilon) Gauss linear corrected;
    laplacian((((Cmu*T)*R)+(nu*(1))),R) Gauss linear corrected;
    laplacian(((Cmu*T)*R),R) Gauss linear corrected;
    laplacian(((Cmu*T)*k),k) Gauss linear corrected;
    laplacian(DREff,R)				 Gauss linear limited 0.333; //Gauss upwind corrected;
    laplacian(DkEff,k)				 Gauss linear limited 0.333; //Gauss upwind corrected;
    //laplacian(DnuTildaEff,nuTilda)		 Gauss linear limited 0.333; //Gauss upwind corrected;
    //laplacian(nuEff,U) Gauss linear corrected;
    // laplacian((1|A(U)),p) Gauss linear corrected;
    //laplacian(DkEff,k) Gauss linear corrected;
    //laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    laplacian(alpha) Gauss linear corrected;
    laplacian(f) Gauss linear corrected;
    laplacian(sqr(L),f) Gauss linear corrected;
    laplacian(rAUf,p)   Gauss linear uncorrected;
    laplacian(epsilon)  Gauss linear uncorrected;
    laplacian(R)        Gauss linear uncorrected;  
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         uncorrected;
}
wallDist
{
    method meshWave;
}
fluxRequired
{
    default         no;
	p;     
}


// ************************************************************************* //
