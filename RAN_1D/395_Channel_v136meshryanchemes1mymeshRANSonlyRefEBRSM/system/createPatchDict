/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createPatchDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Do a synchronisation of coupled points after creation of any patches.
// Note: this does not work with points that are on multiple coupled patches
//       with transformations (i.e. cyclics).
pointSync false;

// Patches to create.
patches
(
    {
        // Name of new patch
        name INLET_NEW;

        // Dictionary to construct new patch from
        patchInfo
        {
            type cyclic;
            neighbourPatch OUTLET_NEW;

        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches (INLET);

        // If constructFrom = set : name of faceSet
        set f0;
    }
    {
        // Name of new patch
        name OUTLET_NEW;

        // Dictionary to construct new patch from
        patchInfo
        {
            type cyclic;
            neighbourPatch INLET_NEW;
        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches (OUTLET);

        // If constructFrom = set : name of faceSet
        set f0;
    }
    {
        // Name of new patch
        name LEFT_NEW;

        // Dictionary to construct new patch from
        patchInfo
        {
            type cyclic;
            neighbourPatch RIGHT_NEW;

        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches (LEFT);

        // If constructFrom = set : name of faceSet
        set f0;
    }
    {
        // Name of new patch
        name RIGHT_NEW;

        // Dictionary to construct new patch from
        patchInfo
        {
            type cyclic;
            neighbourPatch LEFT_NEW;

        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches (RIGHT);

        // If constructFrom = set : name of faceSet
        set f0;
    }
);

// ************************************************************************* //
