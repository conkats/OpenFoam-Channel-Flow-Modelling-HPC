/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pisoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         100;

deltaT          0.001; //Co=dt.U/dx

writeControl    timeStep;

writeInterval   1000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

//output yplus, ShearStress, min/maxU
functions
{
   // #includeFunc "probe"
   //  #includeFunc  singleGraph0    
    #includeFunc "wallShearStress"
    #includeFunc "writeCellCentres"
    #includeFunc residuals
    yPlus
    {
        type            yPlus;
        libs            ("libfieldFunctionObjects.so");
        patches         (lowerWall);
        writeControl    writeTime;
    }
   turbulenceFields1
    {
        type           turbulenceFields;
        libs           ("libfieldFunctionObjects.so");
        //enabled		true;
	writeControl	writeTime;
	//writeControl	adjustableRunTime;//onEnd//timeStep//writeTime
	//writeInterval	0.1;
	fields 
	(
	 	R
	);
    }
   ///////////////////////////////////////////////////////////////////////////
   wallShearStress
           {
                  type        wallShearStress;
                  libs        ("libfieldFunctionObjects.so");
                   patches (cylinder);
                   writeControl writeTime;//adjustableRunTime;
                   //writeInterval 0.1;      
             }
   ///////////////////////////////////////////////////////////////////////////
   //
   //
///////////////////////////////////////////////////////////////////////////
//
//    fieldAverage
//        {
//	           type            fieldAverage;
//                 functionObjectLibs ("libfieldFunctionObjects.so");
//                 enabled         true;
//                 writeControl    adjustableRunTime;
//                 writeInterval   0.1;
//                 //writeControl   timeStep;
//                 //writeInterval  100;
//                 //cleanRestart true;
//                 timeStart       2;
//                 timeEnd         500;
//                 fields
//        (
//                 U
//        {
//                 mean        on;
//                 prime2Mean  on;
//                 base        time;
//     }
//             p
//     {
//             mean        on;
//             prime2Mean  off;
//             base        time;
//                                                                                                                                                                                                          }
//                                                                                                                                                                                                          T
//     {
//           mean        on;
//           prime2Mean  off;
//           base        time;
//      }
//    vorticity
//   {
//        mean        on;
//        prime2Mean  off;
//        base        time;
//  }
//     k
//  {
//   mean        on;
//   prime2Mean  on;
//   base        time;
//   }
//                                                                                                                                                                                                        turbulenceProperties:R
//                                                                                                                                                                                                     {
//                mean        on;
//                prime2Mean  off;
//                base        time;
// }
//                                                  
// );
// }
//
//vorticity
//{
//	    type vorticity;
//          libs ("libfieldFunctionObjects.so");
//          enabled     true;
//          writeControl adjustableRunTime;
//	    writeInterval 0.1;
// }

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//
//forceCoeffs_object
//{
//      // rhoInf - reference density
//      // CofR - Centre of rotation
//      // dragDir - Direction of drag coefficient
//      // liftDir - Direction of lift coefficient
//      // pitchAxis - Pitching moment axis
//      // magUinf - free stream velocity magnitude
//      // lRef - reference length
//      // Aref - reference area
//           type forceCoeffs;
//           functionObjectLibs ("libforces.so");
//           //patches ("body1" "body2" "body3");
//             patches ("cylinder");
//
//             pName p;
//             Uname U;
//             rho rhoInf;
//             rhoInf 1000.0;
//
//    //// Dump to file
//         log true;
//         CofR (0.0 0 0);
//         liftDir (0 1 0);
//         dragDir (1 0 0);
//         pitchAxis (0 0 1);
//         magUInf 1.0;
//         lRef 1.0;         // reference length
//         Aref 1.0;         // reference area 1 for 2d
//
//         writeControl   timeStep;
//         writeInterval  1;
//}





///////////////////////////////////////////////////////////////////////////
//
//forces_object
//{
//     type forces;
//     functionObjectLibs ("libforces.so");
//     enabled         true;
//    //writeControl outputTime;
//      writeControl   timeStep;
//      writeInterval  1;
///     Patches to sample
//      patches ("body1" "body2" "body3");
//      patches ("cylinder");
//   // Name of fields
//      pName p;
//      Uname U;
//   // Density
//      rho rhoInf;
//      rhoInf 1000;
//   // Centre of rotation
//      CofR (0 0 0);
//}
//                                                                                                                                        

}

// ************************************************************************* //
